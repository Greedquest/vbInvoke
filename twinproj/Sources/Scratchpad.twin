' [
'   object,
'   uuid(00020400-0000-0000-C000-000000000046),
'   pointer_default(unique)
' ]
' Interface IDispatch: IUnknown
' {
'   typedef [unique] IDispatch *LPDISPATCH;

'   Const DISPID DISPID_UNKNOWN     = -1;
'   Const DISPID DISPID_VALUE       =  0;
'   Const DISPID DISPID_PROPERTYPUT = -3;
'   Const DISPID DISPID_NEWENUM     = -4;
'   Const DISPID DISPID_EVALUATE    = -5;
'   Const DISPID DISPID_CONSTRUCTOR = -6;
'   Const DISPID DISPID_DESTRUCTOR  = -7;
'   Const DISPID DISPID_COLLECT     = -8;

'   HRESULT GetTypeInfoCount(
'     [ out] UINT *pctinfo);

'   HRESULT GetTypeInfo(
'     [ in] UINT iTInfo,
'     [ in] LCID lcid,
'     [ out] ITypeInfo **ppTInfo);

'   HRESULT GetIDsOfNames(
'     [ in] REFIID riid,
'     [ in, size_is(cNames)] LPOLESTR *rgszNames,
'     [ in] UINT cNames,
'     [ in] LCID lcid,
'     [ out, size_is(cNames)] DISPID *rgDispId);

'   [ local]
'   HRESULT Invoke(
'     [ in] DISPID dispIdMember,
'     [ in] REFIID riid,
'     [ in] LCID lcid,
'     [ in] WORD wFlags,
'     [ in, out] DISPPARAMS *pDispParams,
'     [ out] VARIANT *pVarResult,
'     [ out] EXCEPINFO *pExcepInfo,
'     [ out] UINT *puArgErr);

'   [ call_as(Invoke)]
'   HRESULT RemoteInvoke(
'     [ in] DISPID dispIdMember,
'     [ in] REFIID riid,
'     [ in] LCID lcid,
'     [ in] DWORD dwFlags,
'     [ in] DISPPARAMS *pDispParams,
'     [ out] VARIANT *pVarResult,
'     [ out] EXCEPINFO *pExcepInfo,
'     [ out] UINT *pArgErr,
'     [ in] UINT cVarRef,
'     [ in, size_is(cVarRef)] UINT *rgVarRefIdx,
'     [ in, out, size_is(cVarRef)] VARIANTARG *rgVarRef);
' }

[ InterfaceId ("00020400-0000-0000-C000-000000000046") ]
Interface IDispatch Extends IUnknown
    Sub GetTypeInfoCount()
    Sub GetTypeInfo()
    Sub GetIDsOfNames()
    Sub Invoke()
End Interface



Class Thing
    Implements IDispatch
    
    Private Sub IDispatch_GetTypeInfoCount()
        
    End Sub
    
    

	
End Class