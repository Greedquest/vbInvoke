
' '<Summary> An internal interface exposed by VBA for all components (modules, class modules, etc)
'     '<remarks> This internal interface is known to be supported since the very earliest version of VBA6
'     '[ComImport(), Guid("DDD557E1-D96F-11CD-9570-00AA0051E5D4")]
'     '[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
'     'Public Enum IVBEComponentVTableOffsets           '+3 for the IUnknown
'     '    CompileComponentOffset = 12 + 3              'void CompileComponent();
'     '    GetStdModAccessorOffset = 14 + 3             'IDispatch GetStdModAccessor();
'     '    GetSomeRelatedTypeInfoPtrsOffset = 34 + 3    'void GetSomeRelatedTypeInfoPtrs(out IntPtr a, out IntPtr b);        // returns 2 TypeInfos, seemingly related to this ITypeInfo, but slightly different.
'     'End Enum

[ InterfaceId ("DDD557E1-D96F-11CD-9570-00AA0051E5D4") ]
Interface IVBEComponent Extends IUnknown
	Sub Placeholder01()
    Sub Placeholder02()
    Sub Placeholder03()
    Sub Placeholder04()
    Sub Placeholder05()
    Sub Placeholder06()
    Sub Placeholder07()
    Sub Placeholder08()
    Sub Placeholder09()
    Sub Placeholder10()
    Sub Placeholder11()
    Sub Placeholder12()
    '[ PreserveSig ] I'm sceptical
    Sub CompileComponent()
    Sub Placeholder13()
    'apparently it's HRESULT & RD is a bit misleading, so no PreserveSig here
    Function GetStdModAccessor() As Object
    'Placeholder(1 To 19) As LongPtr
    'GetSomeRelatedTypeInfoPtrs As LongPtr
End Interface


' Module TypeInfoExtensions
'     Option Explicit

    

'     '@Description("Invoke IVBEComponent::GetStdModAccessor - re-raise error codes as VBA errors")
'     Public Function GetStdModAccessor(ByVal pIVBEComponent As LongPtr) As Object
'     Attribute GetStdModAccessor.VB_Description = "Invoke IVBEComponent::GetStdModAccessor - re-raise error codes as VBA errors"
'         Dim hresult As hResultCode
'         hresult = CallFunction(pIVBEComponent, IVBEComponentVTableOffset(IVBEComponentVTable.GetStdModAccessor), CR_HRESULT, CC_STDCALL, VarPtr(GetStdModAccessor))
'         If hresult = S_OK Then Exit Function
'         Err.Raise hresult, "GetStdModAccessor", "Function did not succeed. IVBEComponent::GetStdModAccessor HRESULT: 0x" & Hex$(hresult)
'     End Function

' End Module