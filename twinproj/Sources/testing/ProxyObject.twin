[ COMCreatable (False) ]
Private Class SimplestSwap
    'TODO don't use IDispatchVB because then the pointer to IDispatch is wrong and we cannot overload root interface
    'NOTE if the consumer doesn't know any other interfaces of this class, they cannot leave the Object we provide
    'Except casting to IUnknown and back. 
    
	'Implements IDispatchVB
    Private ReadOnly BaseAccessor As IDispatch
    
    'DO NOT REORDER these 2 functions. Do NOT add new properties above them. This will alter VTable offsets
    Private Sub IDispatch_GetIDsOfNames(ByVal riid As LongPtr, ByVal namesArray As LongPtr, ByVal cNames As Long, ByVal lcid As Long, ByVal dispidArray As LongPtr)
        Logger.Log TraceLevel, "IDispatchVB_GetIDsOfNamesVB"
        BaseAccessor.GetIDsOfNames(riid, namesArray, cNames, lcid, dispidArray)
        Err.ReturnHResult = Err.LastHResult 'maybe not needed...  
    End Sub
    
    Private Sub IDIspatch_Invoke(ByVal dispIDMember As Long, ByVal riid As LongPtr, ByVal lcid As Long, ByVal wFlags As Integer, ByVal pDispParams As LongPtr, ByVal pVarResult As LongPtr, ByVal pExcepInfo As LongPtr, ByVal puArgErr As LongPtr)
        Logger.Log DebugLevel, printf("IDispatchVB_InvokeVB dispid={}", dispIDMember)
        BaseAccessor.Invoke(dispIDMember, _
            riid, lcid, wFlags, _
            pDispParams, _
            pVarResult, pExcepInfo, puArgErr)
        Err.ReturnHResult = Err.LastHResult 'maybe not needed...        
    End Sub
    
    Private Sub New(ByVal BaseAccessor As IDispatch)
        Set Me.BaseAccessor = BaseAccessor
        Dim pDefaultVTable As LongPtr = MemLongPtr(ObjPtr(Me))
        'addressof classmethod fails as it is per instance temp stub fn
        Logger.Log TraceLevel, "About to perform VT swap"
        MemLongPtr(pDefaultVTable + PTR_SIZE * 5) = MemLongPtr(pDefaultVTable + PTR_SIZE * 7)'AddressOf IDispatchVB_GetIDsOfNamesVB 'MemLongPtr(pOverloadVTable + PTR_SIZE * 7) 'getIDsOfNames
        MemLongPtr(pDefaultVTable + PTR_SIZE * 6) = MemLongPtr(pDefaultVTable + PTR_SIZE * 8)'AddressOf IDispatchVB_InvokeVB 'MemLongPtr(pOverloadVTable + PTR_SIZE * 8) 'invoke
        Logger.Log TraceLevel, "VT swap complete"
    End Sub
    
End Class

Module ProxyObjectEntryPoint
    [ DllExport ]
    Public Function makeProxy(ByVal baseObj As Object) As Object
        Logger.Log TraceLevel, printf("making proxy for {}", ObjPtr(baseObj))
        Return New SimplestSwap(baseObj)
    End Function
End Module